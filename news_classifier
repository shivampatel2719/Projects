import re
from sklearn.naive_bayes import MultinomialNB
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import CountVectorizer
cv=CountVectorizer(max_features=1000)
from nltk.stem.porter import PorterStemmer
from nltk.corpus import stopwords
cleaned_review=[]
ps=PorterStemmer()
for i in range(1000):
    review=re.sub('[^a-zA-Z]',' ',input_arr[i])
    review=review.lower()
    review=review.split()
    #review=[ps.stem(word) for word in review if not word in stopwords.words('english')]
    review=[ps.stem(word) for word in review if not word in set(stopwords.words('english'))]
    review=' '.join(review)
    cleaned_review.append(review)
x=cv.fit_transform(cleaned_review).astype(float).toarray()
mb=MultinomialNB(alpha=1)
mb.fit(x_train,y_train)
check=input('Enter news to classify')
r=[]
review=re.sub('[^a-zA-Z]',' ',check)
review=review.lower()
review=review.split()
review=[ps.stem(word) for word in review if not word in stopwords.words('english')]
review=[ps.stem(word) for word in review if not word in set(stopwords.words('english'))]
review=' '.join(review)
r.append(review)
y_p=mb.predict(x_test)
#final result comes here
